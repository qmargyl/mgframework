#include "../mgclasstester.h"

#include "../stubs/mgframeworkstub.h"

void MGClassTester::test_002_basic_MO_create_delete()
{
	MGFrameworkStub mgf;
	mgf.init(128, 128, 32, 32);

	// Creation and deletion
	mgf.runConsoleCommand("delete all mo", &mgf, NULL);
	mgf.runConsoleCommand("add mo 1", &mgf, NULL);
	mgf.runConsoleCommand("mo 0 logging on", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 1", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 0", &mgf, NULL);
	mgf.runConsoleCommand("add mo 5", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 5", &mgf, NULL);
	mgf.runConsoleCommand("delete mo 2", &mgf, NULL);
	mgf.runConsoleCommand("delete mo 2", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 3", &mgf, NULL);
	mgf.runConsoleCommand("add mo 1", &mgf, NULL);
	mgf.runConsoleCommand("delete mo 1", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 3", &mgf, NULL);
	mgf.runConsoleCommand("delete mo 0", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 2", &mgf, NULL);
	mgf.runConsoleCommand("delete mo 1", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 1", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 0", &mgf, NULL);
}

void MGClassTester::test_002_basic_MO_create_delete_with_owner()
{
	MGFrameworkStub mgf;
	mgf.init(128, 128, 32, 32);
	
	// Creation and deletion with -owner
	mgf.runConsoleCommand("delete all mo", &mgf, NULL);
	mgf.runConsoleCommand("add mo 1 -owner 1", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 1", &mgf, NULL);
	mgf.runConsoleCommand("add mo 1 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 2", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 1", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 1", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 0", &mgf, NULL);
	mgf.runConsoleCommand("add mo 5 -owner 1", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 5", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo", &mgf, NULL);
	mgf.runConsoleCommand("add mo 5 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 5", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo", &mgf, NULL);
	mgf.runConsoleCommand("add mo 5 -owner 1", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 5", &mgf, NULL);
	mgf.runConsoleCommand("add mo 5 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 10", &mgf, NULL);
	mgf.runConsoleCommand("add mo 5 -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 15", &mgf, NULL);
	mgf.runConsoleCommand("add mo 5 -owner 4", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 20", &mgf, NULL);
	mgf.runConsoleCommand("add mo 5 -owner 5", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 25", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 1", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 20", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 15", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 10", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 4", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 5", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 5", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 0", &mgf, NULL);
}

void MGClassTester::test_002_basic_MO_create_with_area_square()
{
	MGFrameworkStub mgf;
	mgf.init(128, 128, 32, 32);

	// Creation with -area_square
	mgf.runConsoleCommand("add mo 100 -area_square 30 30 100 100", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 100", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 0", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 0", &mgf, NULL);
}

void MGClassTester::test_002_basic_MO_create_with_area_square_single_location()
{
	MGFrameworkStub mgf;
	mgf.init(128, 128, 32, 32);

	// Creation with -area_square in a single location
	mgf.runConsoleCommand("add mo 1 -area_square 31 39 31 39", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 1", &mgf, NULL);
	mgf.runConsoleCommand("mo 0 expect getlocation 31 39", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 0", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 0", &mgf, NULL);
}

void MGClassTester::test_002_basic_MO_mark_unmark()
{
	MGFrameworkStub mgf;
	mgf.init(128, 128, 32, 32);

	// Mark and unmark
	mgf.runConsoleCommand("add mo 20 -owner 0", &mgf, NULL);
	mgf.runConsoleCommand("mo all logging on", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 20", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmarkedmo 0", &mgf, NULL);
	mgf.runConsoleCommand("mo 10 mark", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmarkedmo 1", &mgf, NULL);
	mgf.runConsoleCommand("mo 11 mark", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmarkedmo 2", &mgf, NULL);
	mgf.runConsoleCommand("mo 2 mark", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmarkedmo 3", &mgf, NULL);
	mgf.runConsoleCommand("mo 7 unmark", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmarkedmo 3", &mgf, NULL);
	mgf.runConsoleCommand("mo 11 unmark", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmarkedmo 2", &mgf, NULL);
	mgf.runConsoleCommand("mo all unmark", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmarkedmo 0", &mgf, NULL);
	mgf.runConsoleCommand("mo 4 mark", &mgf, NULL);
	mgf.runConsoleCommand("mo 5 mark", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmarkedmo 2", &mgf, NULL);
	mgf.runConsoleCommand("mo marked unmark", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmarkedmo 0", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 0", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmarkedmo 0", &mgf, NULL);
	mgf.runConsoleCommand("add mo 2", &mgf, NULL);
	mgf.runConsoleCommand("mo 1 mark", &mgf, NULL);
	mgf.runConsoleCommand("delete mo 0", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmarkedmo 1", &mgf, NULL);
	mgf.runConsoleCommand("delete mo 0", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmarkedmo 0", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 0", &mgf, NULL);
}

void MGClassTester::test_002_basic_MO_verify_location()
{
	MGFrameworkStub mgf;
	mgf.init(128, 128, 32, 32);

	// Verify location
	mgf.runConsoleCommand("delete all mo", &mgf, NULL);
	mgf.runConsoleCommand("add mo 1 -x 15 -y 18", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 1", &mgf, NULL);
	mgf.runConsoleCommand("mo 0 logging on", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("mo 0 expect getlocation 15 18", &mgf, NULL);
	mgf.runConsoleCommand("add mo 1 -x 4 -y 3", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 2", &mgf, NULL);
	mgf.runConsoleCommand("mo 0 logging on", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("mo 1 expect getlocation 4 3", &mgf, NULL);
	mgf.runConsoleCommand("delete mo 0", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 1", &mgf, NULL);
	mgf.runConsoleCommand("mo 0 expect getlocation 4 3", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 0", &mgf, NULL);
}

void MGClassTester::test_002_basic_MO_ordering()
{
	MGFrameworkStub mgf;
	mgf.init(128, 128, 32, 32);
	
	// Ordering
	mgf.runConsoleCommand("delete all mo", &mgf, NULL);
	mgf.runConsoleCommand("add mo 1", &mgf, NULL);
	mgf.runConsoleCommand("mo 0 logging on", &mgf, NULL);
	mgf.runConsoleCommand("mo 0 mark", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmarkedmo 1", &mgf, NULL);
	mgf.runConsoleCommand("mo 0 unmark", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 1", &mgf, NULL);
	mgf.runConsoleCommand("mo 0 getdestination", &mgf, NULL);
	mgf.runConsoleCommand("mo 0 getspeed", &mgf, NULL);
	mgf.runConsoleCommand("mo 0 help", &mgf, NULL);
	mgf.runConsoleCommand("mo 0 setdestination 0 0", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 0", &mgf, NULL);
	mgf.runConsoleCommand("add mo 1", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 1", &mgf, NULL);
	mgf.runConsoleCommand("mo 0 setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("mo 0 setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("mo 0 setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("mo 0 setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 0", &mgf, NULL);
}

void MGClassTester::test_002_basic_MO_random_mo()
{
	MGFrameworkStub mgf;
	mgf.init(128, 128, 32, 32);

	// Random mo test
	mgf.runConsoleCommand("delete all mo", &mgf, NULL);
	mgf.runConsoleCommand("add mo 5", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo mark", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmarkedmo 1", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo getdestination", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo getspeed", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 0", &mgf, NULL);
}

void MGClassTester::test_002_basic_MO_stressing()
{
	MGFrameworkStub mgf;
	mgf.init(16, 16, 32, 32);

	// Stressing
	mgf.runConsoleCommand("map setsize 256 256 32 32", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 1", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 1200", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 1600", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 2000", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 2400", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 2800", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 3200", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 3600", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 4000", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 4400", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 4800", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 5200", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 5600", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 6000", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 6400", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 6800", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 7200", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("add mo 400 -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("mo random_mo setdestination random_x random_y", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("runoneframe", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 2", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 1", &mgf, NULL);
	mgf.runConsoleCommand("delete all mo -owner 3", &mgf, NULL);
	mgf.runConsoleCommand("expect getnumberofmo 0", &mgf, NULL);
}

