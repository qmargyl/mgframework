
// Global variables
global_var1 = 32
global_var2 = 33
deep = 0 // Used in test case deepcalldepth_1

call main_tc


// Generate error if ever ending up here..
create mo 1 -owner 1
expect getnumberofmo 0


function and_then_exit
  exit application
  // Generate error if ever ending up here..
  create mo 1 -owner 1
  expect getnumberofmo 0
end


// Generate error if ever ending up here..
create mo 1 -owner 1
expect getnumberofmo 0


//*****************************
// Main test case
//*****************************
function main_tc
  // Call some sub routines...
  create mo 1
  call create_an_mo
  call create_another_mo
  expect getnumberofmo 3
  delete all mo

  // Other testcases
  call test_symbols_1
  call test_symbols_2	 // tabs and spaces between symbols
  call test_calldepth_1  // function local variables
  call test_comments_1
  call deepcalldepth_1
  call test_if_1
  call test_if_2
  call test_if_3
  call test_if_4
  call test_return_1
  call test_print_1


  // Exit when done...
  call and_then_exit
end
delete all mo


//*****************************
// Test to call sub routines
//*****************************
function create_an_mo 
	// Add an mo..
	add mo 1
end	  
delete all mo



function create_another_mo
  add mo 1  	
end 


//*****************************
// Test symbol handling inside a function
//*****************************
function test_symbols_1
  s1 = 13
  s2 = 14
  s3 = s1
  s1 = s2
  expect s1 14
  expect s2 14
  expect s3 13
  create mo 666
  nmo = getnumberofmo
  expect nmo 666
  delete all mo
end




//*****************************
// Test symbol handling with more tab/space combinations
//*****************************
function test_symbols_2
  s1= 13//space after equals
  s2 =14//space before equals
  s3=s1//no spaces
  s1	=	s2//tabs
  expect s1	14
  expect s2					14
  expect	s3 13
  create	mo 666//tab
  nmo = getnumberofmo
  expect	nmo 666
  delete all mo
  expect s1 14
  expect s2 14
  expect s3 13
end



//*****************************
// Test function local variables, and script global variables
//*****************************
function test_calldepth_1
  cdv = global_var1
  call test_calldepth_2
  expect cdv 32
end

function test_calldepth_2
  call test_calldepth_3
end

function test_calldepth_3
  cdv = 17
end


//*****************************
// Test if statements
//*****************************
function test_if_1
  p1 = 1
  if p1 == 1
    p1 = 0
  endif
  expect p1 0

  p2 = 1
  if p2 == 0
    p2 = 0
  endif
  expect p2 1

  p3 = 1
  if p3 != 1
    p3 = 0
  endif
  expect p3 1

  p4 = 1
  if p4 != 0
    p4 = 0
  endif
  expect p4 0
end

function test_if_2
  p1 = 1
  p2 = 2
  p3 = 3
  if p1 == 1
    if p2 == 2
      p3 = 17
    endif
  endif
  expect p3 17
end

function test_if_3
  p1 = 1
  p2 = 2
  p3 = 3
  if p1 == 1
    if p2 == 2
      p3 = 17
    endif
    if p1 != 2
      p3 = 18
    endif
  endif
  expect p3 18
  p1 = 1
  p2 = 2
  p3 = 3
  if p1 < 10
    if p2 >= 2
      p3 = 17
    endif
    if p1 > 2
      p3 = 18
    endif
  endif
  expect p3 17
end

function test_if_4
  p1 = 1
  p2 = 2
  if p1 >= 0
    if p1 == 1
      if p1 > 0
        if p1 < 7
          p2 = 32
          if p2 == 32
            expect p2 32
            p2 = 81
          endif
          expect p2 81
          if p1 < 6
            if p1 < 5
              if p1 < 4
                if p1 < 3
                  if p1 == 1
                    if p1 == 1
                      if p1 > 0
                        if p1 > 0
                          expect p2 81
                          p2 = 77
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
      endif
    endif
  endif
  expect p2 77
end


//
// Test function with parameters
//
function test_func_param_1
  var1 = 4
  var2 = 9
  call test_func_param_2 var1 var2
end

function test_func_param_2 $1 $2
  expect $1 4
  expect $2 9
end



//*****************************
// Test comments
//*****************************
function test_comments_1
  // first comment
  	var1 = 43 // comment after statement
		//var1 = 44  		                    //
		//		
  	expect var1 43            		     // comment far away
  expect var1 43//	
end



//*****************************
// Test deep call depth
//*****************************
function deepcalldepth_1
  call deepcalldepth_2
  // Test if deepcalldepth_9 was ever called
  expect deep 9
end

function deepcalldepth_2
  call deepcalldepth_3
end

function deepcalldepth_3
  call deepcalldepth_4
end

function deepcalldepth_4
  call deepcalldepth_5
end

function deepcalldepth_5
  call deepcalldepth_6
end

function deepcalldepth_6
  call deepcalldepth_7
end

function deepcalldepth_7
  call deepcalldepth_8
end

function deepcalldepth_8
  call deepcalldepth_9
end

function deepcalldepth_9
  // Set global variable to signal that this function was called
  deep = 9
end



//*****************************
// Test function return values
//*****************************
function test_return_1
  a = 17
  call foo
  a = foo
  expect foo 39
  expect a 39
end

function foo
  call bar
  return bar
end

function bar
  b = 39
  return b
end


//*****************************
// Test print function
//*****************************
function test_print_1
  print "Testing printing function"
  v1 = 0
  if v1 != 0
    print "ERROR"
  endif
  // print "ERROR"
  print "Print line 2"//"ERROR"
  print "Print line 3"//ERROR"
  print "Print line 4//"
end




// Generate error if ever ending up here..
create mo 1 -owner 1
expect getnumberofmo 0
exit application